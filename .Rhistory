# 2. Batch-Labels extrahieren (z. B. "Rep1", "Rep2", "Rep3")
batch_labels <- sub(".*_Rep", "Batch", sample_names)
batch_labels <- factor(batch_labels, levels = c("Batch1", "Batch2", "Batch3"))
# 3. Farben zuweisen
batch_colors <- c("red", "green", "blue")[batch_labels]
# 4. Boxplot pro Sample
boxplot(expr_matrix,
main = "Expression nach Sample (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                    # vertikale Labels
col = batch_colors,
outline = FALSE,
cex.axis = 0.6)            # kleinere Schriftgröße
# 5. Legende
legend("topright",
legend = levels(batch_labels),
fill = c("red", "green", "blue"),
title = "Batch")
colnames(final_smoothed_ctrl_df)[1:10]
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(normalized_rnase_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Farben zuordnen
batch_colors <- c("Rep1" = "red", "Rep2" = "green", "Rep3" = "blue")
colors <- batch_colors[as.character(batch)]
# 5. Boxplot zeichnen
boxplot(expr_matrix,
main = "Expression nach Sample (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
dim(expr_matrix)
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(final_smoothed_ctrl_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Farben zuordnen
batch_colors <- c("Rep1" = "red", "Rep2" = "green", "Rep3" = "blue")
colors <- batch_colors[as.character(batch)]
# 5. Boxplot zeichnen
boxplot(expr_matrix,
main = "Expression nach Sample (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
library(limma)
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(final_smoothed_ctrl_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Log2-Transformation (falls nötig, empfohlen wegen Skalenproblem)
expr_matrix_log <- log2(expr_matrix + 1)
# 5. Batch-Korrektur mit limma
expr_corrected <- removeBatchEffect(expr_matrix_log, batch = batch)
# 5. Boxplot zeichnen vor korrektur
boxplot(expr_matrix,
main = "Expression nach Sample (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# Boxplot nach Korrektur
boxplot(expr_corrected,
main = "Expression nach Sample (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
library(limma)
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(final_smoothed_ctrl_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Log2-Transformation (falls nötig, empfohlen wegen Skalenproblem)
expr_matrix_log <- log2(expr_matrix + 1)
# 5. Batch-Korrektur mit limma
expr_corrected <- removeBatchEffect(expr_matrix_log, batch = batch)
# 5. Boxplot zeichnen vor korrektur
boxplot(expr_matrix,
main = "Expression vor Korrektur (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# Boxplot nach Korrektur
boxplot(expr_corrected,
main = "Expression nach Korrektur (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
# PCA-Analyse vorbereiten
pca_before <- prcomp(t(expr_matrix), scale. = TRUE)
pca_after  <- prcomp(t(expr_corrected), scale. = TRUE)
# Batch-Zuordnung erneut für Farben
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# Plot nebeneinander
par(mfrow = c(1, 2))
# PCA vor Korrektur
plot(pca_before$x[, 1:2],
col = rainbow(length(levels(batch)))[batch],
pch = 19,
main = "PCA vor Batch-Korrektur")
legend("topright", legend = levels(batch), col = rainbow(length(levels(batch))), pch = 19)
# PCA nach Korrektur
plot(pca_after$x[, 1:2],
col = rainbow(length(levels(batch)))[batch],
pch = 19,
main = "PCA nach Batch-Korrektur")
legend("topright", legend = levels(batch), col = rainbow(length(levels(batch))), pch = 19)
# Reset Layout
par(mfrow = c(1, 1))
# Optional: Wenn du pheatmap noch nicht hast
install.packages("pheatmap")
library(pheatmap)
# Auswahl einer Teilmenge der Proteine (z. B. Top 100 variabelsten)
select_top_var <- function(mat, top_n = 100) {
vars <- apply(mat, 1, var)
mat[order(vars, decreasing = TRUE)[1:top_n], ]
}
# Top 100 Gene mit höchster Varianz (vorher/nachher)
heat_before <- select_top_var(expr_matrix, 100)
heat_after  <- select_top_var(expr_corrected, 100)
# Spaltenannotation nach Batch
annotation_col <- data.frame(Batch = batch)
rownames(annotation_col) <- colnames(expr_matrix)
# Zwei Heatmaps nebeneinander
par(mfrow = c(1, 2))
pheatmap(heat_before,
main = "Heatmap vor Batch-Korrektur",
annotation_col = annotation_col,
show_rownames = FALSE,
cluster_cols = TRUE)
pheatmap(heat_after,
main = "Heatmap nach Batch-Korrektur",
annotation_col = annotation_col,
show_rownames = FALSE,
cluster_cols = TRUE)
# Reset Layout
par(mfrow = c(1, 1))
#RDS-Daten laden
final_smoothed_rnase_df <- readRDS("data/final_smoothed_rnase.rds")
str(final_smoothed_rnase_df)
summary(final_smoothed_rnase_df)
# Nur erzeugen, wenn Datei noch nicht existiert
if (!file.exists("data/final_smoothed_rnase.rds")) {
message("HAAALT!!!! Speicher erst neuen Datensatz")
final_data <- data.frame(
final_smoothed_rnase_df
)
saveRDS(final_data, "data/final_smoothed_rnase.rds")
} else {
message("Datensatz existiert bereits")
}
library(limma)
# 1. Spaltennamen ohne 'Protein'
sample_names <- colnames(final_smoothed_rnase_df)[-1]
# 2. Batch aus Replikat-Info extrahieren (z. B. "Rep1", "Rep2", ...)
batch <- factor(sub(".*_Rep", "Rep", sample_names))
head(batch)
# 3. Expression-Matrix (ohne erste Spalte)
expr_matrix <- as.matrix(final_smoothed_rnase_df[, -1])
# 4. Log2-Transformation mit Pseudocount
expr_matrix_log <- log2(expr_matrix + 1)
# 5. Batch-Korrektur
expr_corrected <- removeBatchEffect(expr_matrix_log, batch = batch)
# 6. Plot
par(mfrow = c(2, 1), mar = c(10, 4, 4, 2))
boxplot(expr_matrix_log,
main = "Vor Batch-Korrektur (log2)",
las = 2,
ylab = "log2(Expression + 1)",
col = rainbow(length(batch))[batch])
boxplot(expr_corrected,
main = "Nach Batch-Korrektur (limma)",
las = 2,
ylab = "log2(Expression + 1)",
col = rainbow(length(batch))[batch])
par(mfrow = c(2, 1))
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(final_smoothed_rnase_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Farben zuordnen
batch_colors <- c("Rep1" = "red", "Rep2" = "green", "Rep3" = "blue")
colors <- batch_colors[as.character(batch)]
# 5. Boxplot zeichnen
boxplot(expr_matrix,
main = "Expression nach Sample (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
library(limma)
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(final_smoothed_rnase_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Log2-Transformation (falls nötig, empfohlen wegen Skalenproblem)
expr_matrix_log <- log2(expr_matrix + 1)
# 5. Batch-Korrektur mit limma
expr_corrected <- removeBatchEffect(expr_matrix_log, batch = batch)
# 5. Boxplot zeichnen vor korrektur
boxplot(expr_matrix,
main = "Expression vor Korrektur (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# Boxplot nach Korrektur
boxplot(expr_corrected,
main = "Expression nach Korrektur (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
library(limma)
# 1. Spaltennamen ohne 'Protein'
sample_names <- colnames(final_smoothed_rnase_df)[-1]
# 2. Batch aus Replikat-Info extrahieren (z. B. "Rep1", "Rep2", ...)
batch <- factor(sub(".*_Rep", "Rep", sample_names))
head(batch)
# 3. Expression-Matrix (ohne erste Spalte)
expr_matrix <- as.matrix(final_smoothed_rnase_df[, -1])
# 4. Log2-Transformation mit Pseudocount
expr_matrix_log <- log2(expr_matrix + 1)
# 5. Batch-Korrektur
expr_corrected <- removeBatchEffect(expr_matrix_log, batch = batch)
# 6. Plot
par(mfrow = c(2, 1), mar = c(10, 4, 4, 2))
boxplot(expr_matrix_log,
main = "Vor Batch-Korrektur (log2)",
las = 2,
ylab = "log2(Expression + 1)",
col = rainbow(length(batch))[batch])
boxplot(expr_corrected,
main = "Nach Batch-Korrektur (limma)",
las = 2,
ylab = "log2(Expression + 1)",
col = rainbow(length(batch))[batch])
par(mfrow = c(2, 1))
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(final_smoothed_rnase_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Farben zuordnen
batch_colors <- c("Rep1" = "red", "Rep2" = "green", "Rep3" = "blue")
colors <- batch_colors[as.character(batch)]
# 5. Boxplot zeichnen
boxplot(expr_matrix,
main = "Expression nach Sample (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(final_smoothed_rnase_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Farben zuordnen
batch_colors <- c("Rep1" = "red", "Rep2" = "green", "Rep3" = "blue")
colors <- batch_colors[as.character(batch)]
# 5. Boxplot zeichnen
boxplot(expr_matrix,
main = "Expression nach Sample (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
library(limma)
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(final_smoothed_rnase_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Log2-Transformation (falls nötig, empfohlen wegen Skalenproblem)
expr_matrix_log <- log2(expr_matrix + 1)
# 5. Batch-Korrektur mit limma
expr_corrected <- removeBatchEffect(expr_matrix_log, batch = batch)
# 5. Boxplot zeichnen vor korrektur
boxplot(expr_matrix,
main = "Expression vor Korrektur (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# Boxplot nach Korrektur
boxplot(expr_corrected,
main = "Expression nach Korrektur (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
# PCA-Analyse vorbereiten
pca_before <- prcomp(t(expr_matrix), scale. = TRUE)
pca_after  <- prcomp(t(expr_corrected), scale. = TRUE)
# Batch-Zuordnung erneut für Farben
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# Plot nebeneinander
par(mfrow = c(1, 2))
# PCA vor Korrektur
plot(pca_before$x[, 1:2],
col = rainbow(length(levels(batch)))[batch],
pch = 19,
main = "PCA vor Batch-Korrektur")
legend("topright", legend = levels(batch), col = rainbow(length(levels(batch))), pch = 19)
# PCA nach Korrektur
plot(pca_after$x[, 1:2],
col = rainbow(length(levels(batch)))[batch],
pch = 19,
main = "PCA nach Batch-Korrektur")
legend("topright", legend = levels(batch), col = rainbow(length(levels(batch))), pch = 19)
# Reset Layout
par(mfrow = c(1, 1))
# Optional: Wenn du pheatmap noch nicht hast
install.packages("pheatmap")
library(pheatmap)
# Auswahl einer Teilmenge der Proteine (z. B. Top 100 variabelsten)
select_top_var <- function(mat, top_n = 100) {
vars <- apply(mat, 1, var)
mat[order(vars, decreasing = TRUE)[1:top_n], ]
}
# Top 100 Gene mit höchster Varianz (vorher/nachher)
heat_before <- select_top_var(expr_matrix, 100)
heat_after  <- select_top_var(expr_corrected, 100)
# Spaltenannotation nach Batch
annotation_col <- data.frame(Batch = batch)
rownames(annotation_col) <- colnames(expr_matrix)
# Zwei Heatmaps nebeneinander
par(mfrow = c(1, 2))
pheatmap(heat_before,
main = "Heatmap vor Batch-Korrektur",
annotation_col = annotation_col,
show_rownames = FALSE,
cluster_cols = TRUE)
pheatmap(heat_after,
main = "Heatmap nach Batch-Korrektur",
annotation_col = annotation_col,
show_rownames = FALSE,
cluster_cols = TRUE)
# Reset Layout
par(mfrow = c(1, 1))
install.packages("pheatmap")
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(final_smoothed_ctrl_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Farben zuordnen
batch_colors <- c("Rep1" = "red", "Rep2" = "green", "Rep3" = "blue")
colors <- batch_colors[as.character(batch)]
# 5. Boxplot zeichnen
boxplot(expr_matrix,
main = "Expression nach Sample (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
library(limma)
# 1. Matrix mit Expressionswerten extrahieren (ohne Protein-Spalte)
expr_matrix <- as.matrix(final_smoothed_ctrl_df[, -1])
# 2. Sample-Namen extrahieren
sample_names <- colnames(expr_matrix)
# 3. Batch-Labels aus Sample-Namen ziehen (Rep1, Rep2, Rep3)
batch <- sub(".*_(Rep\\d)", "\\1", sample_names)
batch <- factor(batch, levels = c("Rep1", "Rep2", "Rep3"))
# 4. Log2-Transformation (falls nötig, empfohlen wegen Skalenproblem)
expr_matrix_log <- log2(expr_matrix + 1)
# 5. Batch-Korrektur mit limma
expr_corrected <- removeBatchEffect(expr_matrix_log, batch = batch)
# 5. Boxplot zeichnen vor korrektur
boxplot(expr_matrix,
main = "Expression vor Korrektur (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# Boxplot nach Korrektur
boxplot(expr_corrected,
main = "Expression nach Korrektur (Batch gefärbt)",
ylab = "Expression",
xlab = "Samples",
las = 2,                      # X-Achse: senkrechte Labels
col = colors,
outline = FALSE,
cex.axis = 0.6)              # kleinere Achsenbeschriftung
# 6. Legende hinzufügen
legend("topright",
legend = names(batch_colors),
fill = batch_colors,
title = "Batch")
head(expr_corrected)
